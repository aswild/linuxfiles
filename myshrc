#! /bin/bash
# Allen's unified custom shell config and alias script for bash and zsh

# Shell Options
export FIGNORE=".o:.pyc:~"
export EDITOR="vim"
stty -ixon
set -o ignoreeof

# add ~/bin to PATH if it's not already there
if [[ $PATH != *$HOME/bin* ]]; then
    export PATH=$HOME/bin:$PATH
fi
[[ -e ~/.dircolors ]] && eval `dircolors ~/.dircolors`

# Core aliases
alias ls='ls --color=auto --group-directories-first'
alias lsl='ls -alh --color=auto --group-directories-first'
alias g='egrep'
alias rmtmp='rm `ls -a | grep "~$"`'
alias df='df -h'
alias du='du -h'
alias tmus='tmux'
alias psa='ps aux'
alias psag='ps aux | grep '
alias lspath='echo $PATH | tr ":" "\n"'
alias zshrc='vim ~/.zshrc'
alias bashrc='vim ~/.bashrc'
alias myshrc='vim ~/myshrc'

alias cgrep="find -L . -name '*.[ch]' -print0 2>/dev/null | xargs -0 grep -n --color=auto"
alias rgrep="find -L . -print0 2>/dev/null | xargs -0 grep --color=auto"

# networking/sudo aliases
alias ifconfig='sudo ifconfig'
alias ifdown='sudo ifdown'
alias ifup='sudo ifup'
alias ip='sudo ip'
alias ip6='sudo ip -6'
alias 'apt-get'='sudo apt-get'
alias yum='sudo yum'

# Conditional aliases
# ubuntu-specific
[[ -d /etc/update-motd.d ]] && alias update-motd='sudo run-parts /etc/update-motd.d | sudo tee /run/motd.dynamic'
[[ -x $(which tracert >/dev/null 2>&1) ]] || alias tracert='traceroute'
[[ -x /usr/lib/update-notifier/update-motd-reboot-required ]] && alias rboot='/usr/lib/update-notifier/update-motd-reboot-required || echo "No Update Needed"'
alias findmod='find /lib/modules/$(uname -r) -name "*.ko" | grep -i'

# git aliases/functions
alias gs='git status'
alias gdn='git --no-pager diff'
alias gdh='git diff HEAD'
alias gdhn='git --no-pager diff HEAD'

alias | grep -q gcp && unalias gcp
function gcp {
    git commit -m "$@" && git push
}

alias | grep -q gcap && unalias gcap
function gcap {
    git commit -a -m "$@" && git push
}

function gbase {
    local dir=$(git rev-parse --show-toplevel 2>/dev/null)
    [[ -n $dir ]] && cd $dir
}

# Core functions
function mdcd {
    mkdir $1 && cd $1
}

function cdls {
    cd $1 && ls
}

function ff {
    pattern=$1
    shift 1
    find . -name "*$pattern*" "$@"
}

function ffr {
    pattern=$1
    shift 1
    find . -regex ".*$pattern.*" "$@"
}

function cfind {
    find -L . -name '*.[ch]' | grep --color=auto "$@" 2>/dev/null
}

function vimf {
    vim $(find . -name "$1" | head -n1)
}

function walltime {
    local starttime=$(date -u +%s)
    local prog=$1
    shift
    $prog "$@"
    local endtime=$(date -u +%s)
    local diff=$(($endtime - $starttime))
    echo "Completed '$prog $@' in $(($diff / 60))m $(($diff % 60))s"
}

# tmx function usually duplicated in ~/bin/tmx
function tmx {
    echo "TMUX"
    tmux ls &>/dev/null
    if [[ $? -eq 1 ]]
    then
        echo "starting new"
        tmux
    else
        echo "trying to attach"
        tmux attach
    fi
}

# gvim function for when running in cygwin
if [[ -e /cygdrive/c/Program\ Files\ \(x86\)/Vim/vim74/gvim.exe ]]; then
    export WINDOWS_HOME='C:\Users\'${HOME##*/}
    function gvim()
    {
        if [[ -z $1 ]]; then
            SHELL='' HOME=$WINDOWS_HOME cygstart '/cygdrive/c/Program Files (x86)/Vim/vim74/gvim.exe'
            return
        fi

        for i in "$@"; do
            SHELL='' HOME=$WINDOWS_HOME cygstart '/cygdrive/c/Program Files (x86)/Vim/vim74/gvim.exe' --remote-tab-silent \"$i\"
        done
    }
fi

# bash specific
if [[ -n $BASH ]]; then
    # immediate report background job changes
    set -b
    alias srcrc='source ~/.bashrc'
    PS1='\[\e[1;32m\][\u@\[\e[1;34m\]\h \[\e[1;36m\]\W\[\e[1;32m\]]\$\[\e[0m\] '

# zsh specific
elif [[ -n $ZSH_NAME ]]; then
    alias srcrc='source ~/.zshrc'
fi
